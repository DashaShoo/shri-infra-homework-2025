name: Fix Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Fix release"
        required: true

env:
  DOCKER_REGISTRY: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app

jobs:
  hotfix:
    name: Create Hotfix
    runs-on: ubuntu-latest
    
    env:
      BASE_VERSION: ${{ inputs.release_version }}
      HOTFIX_TAG: ${BASE_VERSION}_fix${{ github.run_number }}
      
    steps:
      - name: Checkout release branch
        uses: actions/checkout@v4
        with:
          ref: releases/$BASE_VERSION
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          
      - name: Install and verify
        run: |
          npm ci
          npm run lint
          npm test
          
      - name: Build and push Docker image
        run: |
          docker build -t $DOCKER_REGISTRY:$HOTFIX_TAG .
          docker tag $DOCKER_REGISTRY:$HOTFIX_TAG $DOCKER_REGISTRY:${BASE_VERSION}_latest
          echo '${{ secrets.YC_SA_KEY }}' | docker login --username json_key --password-stdin cr.yandex
          docker push $DOCKER_REGISTRY:$HOTFIX_TAG
          docker push $DOCKER_REGISTRY:${BASE_VERSION}_latest
          
      - name: Tag hotfix
        run: |
          git tag v$HOTFIX_TAG
          git push origin v$HOTFIX_TAG
          
      - name: Generate hotfix notes
        id: hotfix-notes
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 v$HOTFIX_TAG^ 2>/dev/null || echo "v$BASE_VERSION")
          COMMITS=$(git log $PREV_TAG..HEAD --pretty=format:"- %h %s (%an)")
          
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS"
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Update issue
        if: github.event.repository.has_issues
        run: |
          gh issue comment $(gh issue list --search "Release v$BASE_VERSION" --json number --jq '.[0].number') \
            --body "$(printf "### Hotfix v%s\n\n**Date:** %s\n**Author:** %s\n\n**Changes:**\n%s\n\n**Docker Image:**\n%s:%s" "$HOTFIX_TAG" "$(date '+%Y-%m-%d %H:%M')" "${{ github.actor }}" "${{ steps.hotfix-notes.outputs.notes }}" "$DOCKER_REGISTRY" "$HOTFIX_TAG")"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}